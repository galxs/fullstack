{"version":3,"sources":["services/persons.js","app.js","index.js"],"names":["baseUrl","axios","get","personObject","post","id","changedNumber","put","then","response","data","Persons","props","fpersons","map","person","setPersons","persons","sNM","sEM","Delete","onClick","window","confirm","name","delete","filter","a","setNotificationMessage","setTimeout","catch","error","setErrorMessage","n","Person","number","Filter","value","onChange","PersonForm","onSubmit","nameChange","numberChange","type","Notification","message","className","Error","App","useState","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","errorMessage","useEffect","personService","filteredPersons","toLowerCase","indexOf","event","target","newId","length","preventDefault","cond","undefined","i","alert","concat","console","log","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf6f554a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = personObject => {\r\n    return axios.post(baseUrl, personObject)\r\n}\r\n\r\nconst update = (id, changedNumber) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, changedNumber)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport './index.css'\n\n\n\nconst Persons = (props) => {\n  return (\n    <ul>\n        {props.fpersons.map((person, id) => \n        <Person key={id} person={person} setPersons={props.setPersons} persons={props.persons} sNM={props.sNM} sEM={props.sEM}/> )}\n    </ul>\n  )\n}\n\nconst Delete = (props) => {\n  //console.log(props.id)\n  return (\n      <button onClick ={() => {if (window.confirm(`Delete ${props.name}?`))\n        axios.delete(`/api/persons/${props.id}`)\n      .then(response => {\n        let persons = props.persons.filter(a => a.id !== props.id)\n        props.setPersons(persons)\n        props.setNotificationMessage(`${props.name} was removed from phonebook`)\n        setTimeout(() => {\n          props.setNotificationMessage(null)\n        },5000)\n        }).catch(error => {\n          props.setErrorMessage(`${props.name} does not exist in phonebook`)\n          setTimeout(() => {\n            props.setErrorMessage(null)\n          },5000)\n          props.setPersons(props.persons.filter(n => n.id !== props.id))\n        })    \n\n      }}>delete</button>\n      \n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      <p>\n        {props.person.name} {props.person.number} <Delete id={props.person.id} setPersons={props.setPersons} persons={props.persons} name={props.person.name} setNotificationMessage={props.sNM} setErrorMessage={props.sEM}></Delete>\n      </p>\n    </div>\n    \n  )\n}\nconst Filter = (props) => {\n  return (\n      <form>\n        <div>filter shown with <input value = {props.value} onChange = {props.onChange}/></div>\n      </form>)\n}\n\nconst PersonForm = (props) => {\n  return (\n    \n      <form onSubmit = {props.onSubmit} >\n        <div> name: <input value = {props.name} onChange = {props.nameChange} />\n        </div>\n        <div>number: <input value = {props.number} onChange = {props.numberChange} /></div>\n        <div>\n        <button type=\"submit\" >add</button>\n        </div>\n      </form>)\n      \n}      \nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const addName = (event) => {\n    let newId = persons[persons.length-1].id +1\n    event.preventDefault()\n    const personObject = {\n        name: newName,\n        number: newNumber,\n        id: newId\n    }\n    let cond = 1\n    let id = undefined\n    for (let i = 0; i < persons.length; i++) {\n      \n      if (persons[i].name === newName && persons[i].number !== newNumber) {\n        cond = 2\n        id = persons[i].id\n        break\n      }\n\n      else if (persons[i].name === newName) {\n        alert(newName + ' is already in phonebook')\n        setNewName('')\n        setNewNumber('')\n        cond = 0\n        break\n      }\n      else if (persons[i].name !== newName) {\n        cond = 1\n      }\n\n    }\n    if (cond===1) {\n      personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`${personObject.name} was added to the phonebook`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        },5000)\n        personService\n        .getAll()\n        .then(response => {\n          setPersons(response.data)\n        })\n      })\n      .catch(error => {\n        console.log(error.response.data.error)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n      })\n    } \n    else if (cond===2) {\n      const target = persons.find(a => a.id === id)\n      const changedNumber = {...target, number: newNumber }\n      if (window.confirm(`${target.name} is already added to the phonebook, replace the old number with a new one?`)){\n      personService\n      .update(target.id, changedNumber)\n      .then(response =>{\n        setPersons(persons.map(person => person.id !== target.id? person : changedNumber))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`Person's '${target.name}' number was changed`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        },5000)\n\n      }) \n      .catch(error => {\n        console.log(error.response.data.error)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n        setPersons(persons.filter(n => n.id !== target.id))\n      })    \n    }        \n    setNewName('')\n    setNewNumber('')\n  }\n\n}\n\n  const handlePhonebookChange = (event) => {\n      setNewName(event.target.value)\n\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n\n\n  let filteredPersons = persons.filter(a => a.name.toLowerCase().indexOf(filter.toLowerCase()) > -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Error message = {errorMessage}/>\n      <Notification message = {notificationMessage}/>\n      <Filter value = {filter} onChange = {handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addName} name = {newName} nameChange = {handlePhonebookChange} number = {newNumber} numberChange = {handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons fpersons={filteredPersons} setPersons={setPersons} persons={persons} sNM={setNotificationMessage} sEM={setErrorMessage}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}